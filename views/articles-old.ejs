<%- include('header') %>

<div class="row mb-4">
    <div class="col-12">
        <div class="card shadow">
            <div class="card-header py-3 d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold text-primary">Create New Article</h6>
                <div>
                    <button class="btn btn-success" onclick="toggleCreateForm()">
                        <i class="fas fa-plus"></i> New Article
                    </button>
                </div>
            </div>
            <div class="card-body" id="createForm" style="display: none;">
                <form onsubmit="createArticle(event)">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="title" class="form-label">Title</label>
                                <input type="text" class="form-control" id="title" required>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="mb-3">
                                <label for="category" class="form-label">Category</label>
                                <select class="form-control" id="category">
                                    <option value="">Select Category</option>
                                    <option value="recruitment">Recruitment</option>
                                    <option value="company-culture">Company Culture</option>
                                    <option value="employee-development">Employee Development</option>
                                    <option value="workplace-tips">Workplace Tips</option>
                                    <option value="industry-insights">Industry Insights</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="mb-3">
                                <label for="publicationType" class="form-label">Publication Type</label>
                                <select class="form-control" id="publicationType">
                                    <option value="manual">Manual</option>
                                    <option value="automatic">Automatic</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="tags" class="form-label">Tags (comma-separated)</label>
                        <input type="text" class="form-control" id="tags" placeholder="HR, recruitment, workplace">
                    </div>
                    <div class="mb-3">
                        <label for="content" class="form-label">Content</label>
                        <textarea class="form-control" id="content" rows="10" required></textarea>
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-secondary me-2" onclick="toggleCreateForm()">Cancel</button>
                        <button type="submit" class="btn btn-primary">Create Article</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card shadow">
            <div class="card-header py-3 d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold text-primary">Articles Collection</h6>
                <div>
                    <select class="form-select form-select-sm" id="statusFilter" onchange="filterArticles()">
                        <option value="">All Status</option>
                        <option value="draft">Draft</option>
                        <option value="published">Published</option>
                        <option value="scheduled">Scheduled</option>
                    </select>
                </div>
            </div>
            <div class="card-body">
                <% if (articles.length > 0) { %>
                    <div class="table-responsive">
                        <table class="table table-bordered" id="articlesTable">
                            <thead>
                                <tr>
                                    <th>Title</th>
                                    <th>Category</th>
                                    <th>Status</th>
                                    <th>Publication Type</th>
                                    <th>Created</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% articles.forEach(article => { %>
                                <tr data-status="<%= article.status %>" data-category="<%= article.category %>">
                                    <td>
                                        <strong><%= article.title %></strong>
                                        <% if (article.tags && article.tags.length > 0) { %>
                                            <br>
                                            <% article.tags.forEach(tag => { %>
                                                <span class="badge bg-light text-dark me-1"><%= tag %></span>
                                            <% }) %>
                                        <% } %>
                                    </td>
                                    <td><%= article.category || 'N/A' %></td>
                                    <td>
                                        <span class="badge bg-<%= article.status === 'published' ? 'success' : article.status === 'draft' ? 'secondary' : 'warning' %> status-badge">
                                            <%= article.status %>
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge bg-<%= article.publicationType === 'automatic' ? 'info' : 'primary' %>">
                                            <%= article.publicationType %>
                                        </span>
                                    </td>
                                    <td><%= new Date(article.createdAt).toLocaleDateString() %></td>
                                    <td>
                                        <a href="/articles/<%= article.id %>" class="btn btn-sm btn-outline-primary btn-action">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        <% if (article.status === 'draft') { %>
                                        <button class="btn btn-sm btn-outline-success btn-action" onclick="publishArticle('<%= article.id %>')">
                                            <i class="fas fa-paper-plane"></i> Publish
                                        </button>
                                        <% } %>
                                        <button class="btn btn-sm btn-outline-danger btn-action" onclick="deleteArticle('<%= article.id %>')">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    </td>
                                </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                <% } else { %>
                    <div class="text-center py-5">
                        <i class="fas fa-newspaper fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted">No Articles Yet</h4>
                        <p class="text-muted">Create your first article to get started with content automation.</p>
                        <button class="btn btn-primary" onclick="toggleCreateForm()">
                            <i class="fas fa-plus"></i> Create First Article
                        </button>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<script>
function toggleCreateForm() {
    const form = document.getElementById('createForm');
    form.style.display = form.style.display === 'none' ? 'block' : 'none';
    
    if (form.style.display === 'block') {
        document.getElementById('title').focus();
    }
}

async function createArticle(event) {
    event.preventDefault();
    
    const formData = {
        title: document.getElementById('title').value,
        content: document.getElementById('content').value,
        category: document.getElementById('category').value,
        tags: document.getElementById('tags').value,
        publicationType: document.getElementById('publicationType').value
    };
    
    const button = event.target.querySelector('button[type="submit"]');
    const originalText = button.innerHTML;
    
    button.disabled = true;
    button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Creating...';
    
    try {
        const response = await axios.post('/articles', formData);
        if (response.data.success) {
            alert('Article created successfully!');
            window.location.reload();
        } else {
            alert('Failed to create article: ' + response.data.error);
        }
    } catch (error) {
        alert('Error creating article: ' + error.message);
    } finally {
        button.disabled = false;
        button.innerHTML = originalText;
    }
}

async function publishArticle(articleId) {
    if (!confirm('Are you sure you want to publish this article?')) return;
    
    try {
        const response = await axios.post(`/articles/${articleId}/publish`);
        if (response.data.success) {
            alert('Article published successfully!');
            window.location.reload();
        } else {
            alert('Failed to publish article: ' + response.data.error);
        }
    } catch (error) {
        alert('Error publishing article: ' + error.message);
    }
}

async function deleteArticle(articleId) {
    if (!confirm('Are you sure you want to delete this article? This action cannot be undone.')) return;
    
    try {
        const response = await axios.delete(`/articles/${articleId}`);
        if (response.data.success) {
            alert('Article deleted successfully!');
            window.location.reload();
        } else {
            alert('Failed to delete article: ' + response.data.error);
        }
    } catch (error) {
        alert('Error deleting article: ' + error.message);
    }
}

function filterArticles() {
    const status = document.getElementById('statusFilter').value;
    const rows = document.querySelectorAll('#articlesTable tbody tr');
    
    rows.forEach(row => {
        const rowStatus = row.getAttribute('data-status');
        if (!status || rowStatus === status) {
            row.style.display = '';
        } else {
            row.style.display = 'none';
        }
    });
}
</script>

<%- include('footer') %>